{"name":"Text-template","tagline":"Single-Class string template engine for PHP5 supporting if/loops/filters","body":"# Text-Template\r\nSingle-Class PHP5 template engine with support for if/loops/filters\r\n\r\nIt is aimed to be a small string Template-Engine to meet e-Mailing or small html-Template demands. It is not meant\r\nto be a replacement for pre-compiled full featured Template-Engines like Smarty or Twig.\r\n\r\nTextTemplate uses Regular-Expressions for text-Parsing. No code is generated or evaluated - so this might\r\nbe a secure solution to use in no time-critical situations.\r\n\r\nWhilst most template-engines rely on eval'ing generated code and filesystem-access, Text-Template uses a  \r\nset of regular-expressions to parse the template. Nor any intermediate code is generated nor any \r\ncode is eval'ed. So TextTemplate should be more secure than Smarty or Twig by design.\r\n\r\nTextTemplate supports infinite-nested loops and sequences.\r\n\r\n## Install\r\n\r\nJust Copy the contents of <https://github.com/dermatthes/text-template/blob/master/src/TextTemplate.php> to your project folder to\r\nuse TextTemplate. It's just one class.\r\n\r\nOr clone this repository and add this as external to your project.\r\n\r\nOr, if you want to integrate only the Files we offer a gzip'ed phar archive: <https://github.com/dermatthes/text-template/blob/master/_build/text-template.recent.phar.php.gz>\r\n\r\n\r\n\r\n## Basic Example\r\n```php\r\n\r\n// 1. Define the Template\r\n$tplStr = <<<EOT\r\nHello World {= name }\r\n{if name == \"Matthias\"}\r\nHallo {= name | capitalize }\r\n{/if}\r\nEOT;\r\n\r\n// 2. Define the Data for the Template\r\n$data = [\r\n    \"name\" => \"Matthias\"\r\n];\r\n\r\n// 3. Parse\r\n$tt = new TextTemplate($tplStr);\r\necho $tt->apply ($data);\r\n```\r\n\r\n\r\n\r\n## Value injection\r\n\r\nUse the value Tag\r\n```\r\n{= varName}\r\n```\r\n\r\nTo inject a value to the Code. Any variables will be ```htmlspecialchars()``` encoded by default. To\r\noutput the RAW content use the ```raw```-Filter: ```{=htmlCode|raw}```\r\n\r\nTo access array elements or objects use \".\" to access sub-elements:\r\n \r\n ```\r\n {= users.0.name}\r\n ```\r\n \r\n\r\n\r\n### Adding Filters\r\n\r\nYou can add custom filters or overwrite own filters.\r\n\r\nAdding a new Filter:\r\n\r\n```php\r\n$tt->addFilter (\"currency\", function ($input) {\r\n    return number_format ($input, 2, \",\", \".\");\r\n});\r\n```\r\n\r\nUse this filter inside your template\r\n\r\n```\r\n{= someVariable | currency }\r\n```\r\n\r\n\r\n### Replacing the default-Filter\r\nBy default and for security reason all values will be escaped using the \"_DEFAULT_\"-Filter. (except if\r\n\"raw\" was selected within the filter section)\r\n\r\nIf you, for some reason, want to disable this functionality or change the escape function you can \r\noverwrite the _DEFAULT_-Filter:\r\n\r\n```php\r\n$tt->addFilter (\"_DEFAULT_\", function ($input) {\r\n    return strip_tags ($input);\r\n});\r\n```\r\n\r\nThis example will replace the htmlspecialchars() escaper by the strip_tags() function.\r\n\r\n## Loops\r\n\r\nYou can insert loops:\r\n\r\n```\r\n{for curName in names}\r\nCurrent Name: {= curName}\r\n{/for}\r\n```\r\n\r\nInside each loop, there are to magick-values ```@index0``` (index starting with 0) and ```@index1``` for a\r\nindex starting with 1.\r\n\r\n```\r\n{for curName in names}\r\nLine {= @index1 }: {= curName}\r\n{/for}\r\n```\r\n\r\n\r\n## Conditions (if)\r\n\r\nYou can use if-conditions:\r\n\r\n```\r\n{if someVarName == \"SomeValue\"}\r\nHello World\r\n{/if}\r\n```\r\n\r\nLimitation: Logical connections like OR / AND are not possible at the moment. Maybe in the future.\r\n\r\n\r\n\r\n\r\n## Limitations\r\n\r\nThe logic-Expression-Parser won't handle logic connections (OR / AND) in conditions.\r\n\r\n## Benchmark\r\n\r\nAlthough the parser is build of pure regular-expressions, I tried to avoid too expensive constructions like\r\nread ahead, etc.\r\n\r\nAnd we got quite good results: \r\n\r\n| Template size | Parsing time[sec] |\r\n|---------------|-------------------|\r\n| 50kB          | 0.002             |\r\n| 200kB         | 0.007             |\r\n\r\n\r\n\r\n## About\r\nText-Template was written by Matthias Leuffen <http://leuffen.de>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}